{"ast":null,"code":"var _jsxFileName = \"/Users/sam/Desktop/webapps/latin_library/frontend/src/Components/SearchForText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Styling/SearchText.css'; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchForText = () => {\n  _s();\n  const [authors, setAuthors] = useState([]);\n  const [works, setWorks] = useState([]);\n  const [author, setAuthor] = useState('');\n  const [work, setWork] = useState('');\n  const [selectedAuthor, setSelectedAuthor] = useState('');\n  const [selectedWork, setSelectedWork] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    const fetchAuthorsAndWorks = async () => {\n      try {\n        const authorsResponse = await fetch('/api/authors');\n        const worksResponse = await fetch('/api/works');\n        const authorsData = await authorsResponse.json();\n        const worksData = await worksResponse.json();\n        setAuthors(authorsData);\n        setWorks(worksData);\n      } catch (error) {\n        console.error('Error fetching authors and works:', error);\n      }\n    };\n    fetchAuthorsAndWorks();\n  }, []);\n  const handleAuthorChange = event => {\n    setAuthor(event.target.value);\n    setSelectedAuthor('');\n  };\n  const handleWorkChange = event => {\n    setWork(event.target.value);\n    setSelectedWork('');\n  };\n  const handleSearch = async () => {\n    if (!selectedAuthor || !selectedWork) {\n      setErrorMessage('Please select an author and a work.');\n      return;\n    }\n    try {\n      const response = await fetch(`/api/search?author=${selectedAuthor}&work=${selectedWork}`);\n      const data = await response.json();\n      setSearchResults(data);\n      setErrorMessage('');\n    } catch (error) {\n      console.error('Error searching:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-text-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Search by Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"author\",\n        value: author,\n        onChange: handleAuthorChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select an author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), authors.map(author => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: author.name,\n          children: author.name\n        }, author.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"work\",\n        children: \"Search by Work:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"work\",\n        value: work,\n        onChange: handleWorkChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), works.map(work => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: work.title,\n          children: work.title\n        }, work.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: result.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: result.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, result._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchForText, \"+zFRB/qYWfUjCZx51W4Kv2qrTZs=\");\n_c = SearchForText;\nexport default SearchForText;\nvar _c;\n$RefreshReg$(_c, \"SearchForText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SearchForText","_s","authors","setAuthors","works","setWorks","author","setAuthor","work","setWork","selectedAuthor","setSelectedAuthor","selectedWork","setSelectedWork","searchResults","setSearchResults","errorMessage","setErrorMessage","fetchAuthorsAndWorks","authorsResponse","fetch","worksResponse","authorsData","json","worksData","error","console","handleAuthorChange","event","target","value","handleWorkChange","handleSearch","response","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","map","name","title","onClick","result","text","_id","_c","$RefreshReg$"],"sources":["/Users/sam/Desktop/webapps/latin_library/frontend/src/Components/SearchForText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Styling/SearchText.css'; // Import CSS file for styling\n\nconst SearchForText = () => {\n  const [authors, setAuthors] = useState([]);\n  const [works, setWorks] = useState([]);\n  const [author, setAuthor] = useState('');\n  const [work, setWork] = useState('');\n  const [selectedAuthor, setSelectedAuthor] = useState('');\n  const [selectedWork, setSelectedWork] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    const fetchAuthorsAndWorks = async () => {\n      try {\n        const authorsResponse = await fetch('/api/authors');\n        const worksResponse = await fetch('/api/works');\n        const authorsData = await authorsResponse.json();\n        const worksData = await worksResponse.json();\n        setAuthors(authorsData);\n        setWorks(worksData);\n      } catch (error) {\n        console.error('Error fetching authors and works:', error);\n      }\n    };\n    fetchAuthorsAndWorks();\n  }, []);\n\n  const handleAuthorChange = (event) => {\n    setAuthor(event.target.value);\n    setSelectedAuthor('');\n  };\n\n  const handleWorkChange = (event) => {\n    setWork(event.target.value);\n    setSelectedWork('');\n  };\n\n  const handleSearch = async () => {\n    if (!selectedAuthor || !selectedWork) {\n      setErrorMessage('Please select an author and a work.');\n      return;\n    }\n    try {\n      const response = await fetch(`/api/search?author=${selectedAuthor}&work=${selectedWork}`);\n      const data = await response.json();\n      setSearchResults(data);\n      setErrorMessage('');\n    } catch (error) {\n      console.error('Error searching:', error);\n    }\n  };\n\n  return (\n    <div className=\"search-text-container\"> {/* Apply CSS class for styling */}\n      <h2>Search Text</h2>\n      <div>\n        <label htmlFor=\"author\">Search by Author:</label>\n        <select id=\"author\" value={author} onChange={handleAuthorChange}>\n          <option value=\"\">Select an author</option>\n          {authors.map(author => (\n            <option key={author.id} value={author.name}>{author.name}</option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"work\">Search by Work:</label>\n        <select id=\"work\" value={work} onChange={handleWorkChange}>\n          <option value=\"\">Select a work</option>\n          {works.map(work => (\n            <option key={work.id} value={work.title}>{work.title}</option>\n          ))}\n        </select>\n      </div>\n      <button onClick={handleSearch}>Search</button>\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n      <div>\n        {searchResults.map((result) => (\n          <div key={result._id}>\n            <h3>{result.title}</h3>\n            <p>{result.text}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchForText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}